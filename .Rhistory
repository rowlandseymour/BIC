comparisons <- simulate_comparisons(100, lambda, 0)
median.ordering(comparisons$win.matrix)
order(lambda)
library(BradleyTerry2)
install.packages("BradleyTerry2")
library(BradleyTerry2)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
lambda.mle
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
cbind(order(lambda), order(lambda.mle), ordering)
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(100, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
cbind(order(lambda), order(lambda.mle), ordering)
lambda.mle
cbind(order(lambda), order(lambda.mle$ability), ordering)
cbind(order(lambda), order(lambda.mle[, 1]), ordering)
comparisons <- simulate_comparisons(10000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
cbind(order(lambda), order(lambda.mle[, 1]), ordering)
comparisons <- simulate_comparisons(100, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
cbind(order(lambda), order(lambda.mle[, 1]), ordering)
plot(oder(lambda), ordering)
plot(order(lambda), ordering)
plot(order(lambda), order(lambda.mle[, 1]))
cor(lambda, lambda.mle[, 1], method = "spear")
cor(lambda, ordering, method = "spear")
comparisons$win.matrix
ordering
lambda
comparisons <- simulate_comparisons(10000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
cbind(order(lambda), order(lambda.mle[, 1]), ordering)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
cbind(order(lambda), order(lambda.mle[, 1]), ordering)
comparisons <- simulate_comparisons(200, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
cbind(order(lambda), order(lambda.mle[, 1]), ordering)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df)
comparisons <- simulate_comparisons(50, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df)
?pairs
cor(ordering.df)
?cor
rank(lambda)
order(lambda)
?order
?rank
ordering
rank(lambd)
rank(lambda)
order(lambd)
order(lambda)
lambda
lambda[order(lambda)]
lambda[rank(lambda)]
order(order(lambda))
rank(lambda)
s.rank <- function(x, y){
6*sum(order(x) - order(y))^2/(length(x)*(length(x) - 1))
}
s.rank(order(lambda), ordering)
order(lambda)
order(ordering)
order(lambda) - order(ordering)
sum(order(lambda) - order(ordering))
sum(order(lambda) - order(ordering))^2
s.rank(order(lambda), order(lambda.mle[, 1]))
order(lambda.mle[, 1])
comparisons <- simulate_comparisons(5000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df)
cor(ordering.df)
s.rank(order(lambda), order(lambda.mle[, 1]))
order(lambda)
order(lambda.mle[, 1])
s.rank <- function(x, y){
1 - 6*sum(order(x) - order(y))^2/(length(x)*(length(x) - 1))
}
s.rank(order(lambda), order(lambda.mle[, 1]))
comparisons <- simulate_comparisons(50, lambda, 0)
s.rank(order(lambda), order(lambda.mle[, 1]))
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df)
cor(ordering.df)
cor(ordering.df, methd = "spearmans")
cor(ordering.df, methd = "spearman")
cor(ordering.df, method = "spearman")
s.rank(order(lambda), order(lambda.mle[, 1]))
s.rank(order(lambda), ordering)
order(ordering)
order(lambda)
s.rank <- function(x, y){
1 - 6*sum((order(x) - order(y))^2)/(length(x)*(length(x) - 1))
}
s.rank(order(lambda), ordering)
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(50, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df)
s.rank(order(lambda), ordering)
s.rank <- function(x, y){
1 - 6*sum((order(x) - order(y))^2)/(length(x)*(length(x)^2 - 1))
}
s.rank(order(lambda), ordering)
order(lambda)
cor(ordering.df, method = "sp")
cor(ordering.df, method = "spearman")
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(100, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
?pairs
pairs(ordering.df, lower.panel = NULL)
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 10
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
library(BSBT)
# Dar es Salaam -----------------------------------------------------------
data("dar.comparisons")
head(dar.comparisons)
win.matrix <- comparisons_to_matrix(452, dar.comparisons[1:2, ])
win.matirx
rowSums(win.matrix)
win.matrix <- comparisons_to_matrix(452, dar.comparisons[, 1:2])
rowSums(win.matrix)
ordering <- median.ordering(win.matrix)
bt <- BTm(outcome = 1, player1 = dar.comparisons$poorest, player2 = dar.comparisons$richest)
bt <- BTm(outcome = 1, player1 = factor(dar.comparisons$poorest, levels = 1:452), player2 = factor(dar.comparisons$richest, levels = 1:452))
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("BT" = order(lambda.mle[, 1]), "median" = ordering)
plot(ordering.df$BT, ordering.df$ordering)
ordering
order(lambda.mle[, 1])
plot(mean.deprivation, lambda.mle)
plot(mean.deprivation, lambda.mle[, 1])
bt <- BTm(outcome = 0, player1 = factor(dar.comparisons$poorest, levels = 1:452), player2 = factor(dar.comparisons$richest, levels = 1:452))
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("BT" = order(lambda.mle[, 1]), "median" = ordering)
plot(ordering.df$BT, ordering.df$ordering)
s.rank(ordering, order(lambda.mle[, 1]))
BTabilities(bt)
ordering.df <- data.frame("BT" = order(lambda.mle[, 1]), "median" = ordering)
plot(ordering.df$BT, ordering.df$ordering)
s.rank(ordering, order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 100
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(1000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
hist(lambda)
comparisons <- simulate_comparisons(10000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 100
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(10000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
dim(ordering.df)
pairs(order
ing.df, lower.panel = NULL)
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
# Simulated data ----------------------------------------------------------
N <- 100
lambda <- rnorm(N, 0, 3)
comparisons <- simulate_comparisons(10000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
comparisons <- simulate_comparisons(50000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
s.rank(order(lambda), ordering)
s.rank(order(lambda), order(lambda.mle[, 1]))
plot(lambda, lambda.mle[, 1])
# Simulated data ----------------------------------------------------------
N <- 100
lambda <- rnorm(N, 0, 5)
comparisons <- simulate_comparisons(50000, lambda, 0)
ordering <- median.ordering(comparisons$win.matrix)
bt <- BTm(outcome = comparisons$results$result, player1 = comparisons$results$area1, player2 = comparisons$results$area2)
lambda.mle <- BTabilities(bt)
ordering.df <- data.frame("true" = order(lambda), "BT" = order(lambda.mle[, 1]), "median" = ordering)
ordering.df
pairs(ordering.df, lower.panel = NULL)
y <- seq(0, 5, 0.01)
x <- seq(0, 5, 0.01)
d.halfnorm <- 2/(lambda*sqrt(2*pi))*exp(-0.5*x^2)
lambda <- 1
q.x  <- dexp(x, lambda)
pi.x <- 2/(sqrt(2*pi))*exp(-0.5*x^2)
q.x  <- dexp(x, lambda)
plot(x, pi.x, type = 'l')
lines(x, q.x, lty = 2)
plot(x, pi.x, type = 'l')
lines(x, q.x, lty = 2)
M <- 2/(lambda*sqrt(2*pi))*exp(-0.5*lambda^2)
lines(x, M*q.x, lty = 2)
plot(x, pi.x, type = 'l')
lines(x, M*q.x, lty = 2)
M
exp(-0.5*lambda^2)
2/(lambda*sqrt(2*pi))
plot(x, M*pi.x, type = 'l')
lines(x, q.x, lty = 2)
plot(x, M*pi.x, type = 'l', ylim = c(0, 1))
lines(x, q.x, lty = 2)
plot(x, M*pi.x, type = 'l', ylim = c(0, M))
lines(x, q.x, lty = 2)
plot(x, M*pi.x, type = 'l', ylim = c(0, 1))
lines(x, q.x, lty = 2)
M <- 2/(lambda*sqrt(2*pi))*exp(0.5*lambda^2)
plot(x, pi.x, type = 'l', ylim = c(0, 1))
lines(x, M*q.x, lty = 2)
plot(x, pi.x, type = 'l', ylim = c(0, M))
lines(x, M*q.x, lty = 2)
plot(x, pi.x, type = 'l', ylim = c(0, M), xaxt = "n", yaxt = "n")
plot(x, pi.x, type = 'l', ylim = c(0, M), xaxt = "n", yaxt = "n", xlab = "x" ylab = "density")
plot(x, pi.x, type = 'l', ylim = c(0, M), xaxt = "n", yaxt = "n", xlab = "x", ylab = "density")
lines(x, M*q.x, lty = 2)
legend('topright', c(epxression(pi(x))))
legend('topright', c(expression(pi(x))))
legend('topright', c(expression(pi(x)), expression(Mq(x))), lty = c(1, 2), bty = "n")
plot(x, pi.x, type = 'l', ylim = c(0, M), xaxt = "n", yaxt = "n", xlab = "x", ylab = "density")
lines(x, M*q.x, lty = 2)
legend('topright', c(expression(pi(x)), expression(Mq(x))), lty = c(1, 2), bty = "n")
x <- seq(0, 5, 0.01)
lambda <- 1
#Denisties
pi.x <- 2/(sqrt(2*pi))*exp(-0.5*x^2)
q.x  <- dexp(x, lambda)
#M
M <- 2/(lambda*sqrt(2*pi))*exp(0.5*lambda^2)
#Plot
plot(x, pi.x, type = 'l', ylim = c(0, M), xaxt = "n", yaxt = "n", xlab = "x", ylab = "density")
lines(x, M*q.x, lty = 2)
legend('topright', c(expression(pi(x)), expression(Mq(x))), lty = c(1, 2), bty = "n")
lambda <- 0.2
#Denisties
pi.x <- 2/(sqrt(2*pi))*exp(-0.5*x^2)
q.x  <- dexp(x, lambda)
#M
M <- 2/(lambda*sqrt(2*pi))*exp(0.5*lambda^2)
#Plot
plot(x, pi.x, type = 'l', ylim = c(0, M), xaxt = "n", yaxt = "n", xlab = "x", ylab = "density")
lines(x, M*q.x, lty = 2)
legend('topright', c(expression(pi(x)), expression(Mq(x))), lty = c(1, 2), bty = "n")
M
x <- seq(0, 5, 0.01)
lambda <- 10
#Denisties
pi.x <- 2/(sqrt(2*pi))*exp(-0.5*x^2)
q.x  <- dexp(x, lambda)
#M
M <- 2/(lambda*sqrt(2*pi))*exp(0.5*lambda^2)
#Plot
plot(x, pi.x, type = 'l', ylim = c(0, M), xaxt = "n", yaxt = "n", xlab = "x", ylab = "density")
lines(x, M*q.x, lty = 2)
legend('topright', c(expression(pi(x)), expression(Mq(x))), lty = c(1, 2), bty = "n")
spam <- 0.5
nspam <- 0.5
b.spam <- 0.8
b.nspam <- 0.01
(b.spam*spam)/((b.spam*spam) + (b.nspam*nspam))
80/81
spam <- 0.8
nspam <- 0.2
b.spam <- 0.8
b.nspam <- 0.01
(b.spam*spam)/((b.spam*spam) + (b.nspam*nspam))
401/501
401/500
60/361
360/361
320/321
100 + 400 + (125*2*5) + (30*5*2)
1000 + 400 + (125*2*5) + (30*5*2)
1000 + 400 + (1200*2) + (30*5*2)
1000 + 400 + (125*2*5) + (30*2*5)
1000 + 2400 + (125*2*5) + (30*2*5)
4950+2950
7900*4
1500 + (40*2) + (75*5)
(125*4*2) + (125*2*2) + 2000 + (30*4*2) + (20*30) + 1000 + 1000
create_github_token()
usethis::create_github_token()
install.packages("usethis")
usethis::create_github_token()
install.packages("gitcreds")
library(gitcreds)
?gitcreds_set
credentials::set_github_pat("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")
usethis::use_git_config(user.name = "rowlandseymour", user.email = "rowlandseymour@gmail.com")
credentials::set_github_pat("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")
usethis::edit_r_environ()
usethis::git_sitrep()
